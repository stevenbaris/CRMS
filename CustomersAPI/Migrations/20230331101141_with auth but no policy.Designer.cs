// <auto-generated />
using System;
using CustomersAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CustomersAPI.Migrations
{
    [DbContext(typeof(CustomerDBContext))]
    [Migration("20230331101141_with auth but no policy")]
    partial class withauthbutnopolicy
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CustomersAPI.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("CustomersAPI.Models.Customer", b =>
                {
                    b.Property<Guid>("Customer_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("RegularExpression", "^(09|\\+639)\\d{9}$");

                    b.HasKey("Customer_Id");

                    b.ToTable("CUSTOMERS LIST", (string)null);

                    b.HasData(
                        new
                        {
                            Customer_Id = new Guid("6ea83196-b910-4b25-9ba6-3050eb1056fb"),
                            Address = "5234 Crossing Street",
                            DOB = new DateTime(1975, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mauris.sagittis@icloud.edu",
                            FirstName = "Madeline",
                            Gender = "Female",
                            LastName = "Baxter",
                            Phone = "09123546789"
                        },
                        new
                        {
                            Customer_Id = new Guid("db589b15-9e4a-42b6-9e44-d5db4d1e9132"),
                            Address = "3 Pepper Wood Center",
                            DOB = new DateTime(1984, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "aabrahamovitz0@marketwatch.com",
                            FirstName = "Agatha",
                            Gender = "Female",
                            LastName = "Abrahamovitz",
                            Phone = "09601729545"
                        },
                        new
                        {
                            Customer_Id = new Guid("9aaf47ce-6b35-4f09-a8e3-9873d05e7c68"),
                            Address = "97649 Corry Terrace",
                            DOB = new DateTime(1956, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mhabercham1@squidoo.com",
                            FirstName = "Maia",
                            Gender = "Female",
                            LastName = "Habercham",
                            Phone = "09184621695"
                        },
                        new
                        {
                            Customer_Id = new Guid("ad7fcf33-d684-4cc8-bfa4-c85608a1983c"),
                            Address = "4608 Raven Parkway",
                            DOB = new DateTime(1987, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "amacrow2@globo.com",
                            FirstName = "Alane",
                            Gender = "Female",
                            LastName = "Macrow",
                            Phone = "09276939145"
                        },
                        new
                        {
                            Customer_Id = new Guid("584f1e80-2f0d-4078-b10a-56f663e629e0"),
                            Address = "2067 Golden Leaf Circle",
                            DOB = new DateTime(1964, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tedington3@illinois.edu",
                            FirstName = "Tracy",
                            Gender = "Male",
                            LastName = "Edington",
                            Phone = "09265235080"
                        },
                        new
                        {
                            Customer_Id = new Guid("b145378d-e789-4d64-a780-d1442c8535d6"),
                            Address = "52014 Leroy Hill",
                            DOB = new DateTime(1954, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hsimunek4@yellowpages.com",
                            FirstName = "Hinze",
                            Gender = "Male",
                            LastName = "Simunek",
                            Phone = "09267006937"
                        },
                        new
                        {
                            Customer_Id = new Guid("4c692151-e8b5-4af7-bd93-3c7a7255efb0"),
                            Address = "673 Autumn Leaf Court",
                            DOB = new DateTime(2006, 7, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "asummerskill5@gravatar.com",
                            FirstName = "Angela",
                            Gender = "Female",
                            LastName = "Summerskill",
                            Phone = "09337435073"
                        },
                        new
                        {
                            Customer_Id = new Guid("81c08149-429f-4dea-9111-942e16d2d1ac"),
                            Address = "9 Pleasure Way",
                            DOB = new DateTime(1978, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jbrowett6@mediafire.com",
                            FirstName = "Jed",
                            Gender = "Male",
                            LastName = "Browett",
                            Phone = "09143498357"
                        },
                        new
                        {
                            Customer_Id = new Guid("197c03f8-206e-430e-ba15-5d8e1d0148f0"),
                            Address = "17 Columbus Junction",
                            DOB = new DateTime(1955, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "gbilson7@prnewswire.com",
                            FirstName = "Georgianna",
                            Gender = "Female",
                            LastName = "Bilson",
                            Phone = "09397882449"
                        },
                        new
                        {
                            Customer_Id = new Guid("5c783ed5-3f6f-48b9-81b0-d01d91c0416c"),
                            Address = "82368 Boyd Point",
                            DOB = new DateTime(2002, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ahave8@so-net.ne.jp",
                            FirstName = "Alister",
                            Gender = "Male",
                            LastName = "Have",
                            Phone = "09638397843"
                        },
                        new
                        {
                            Customer_Id = new Guid("1cd4f0cf-f9df-441f-8a54-a0d1738d571f"),
                            Address = "59830 Brickson Park Road",
                            DOB = new DateTime(2001, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "khadlington9@paypal.com",
                            FirstName = "Kerianne",
                            Gender = "Female",
                            LastName = "Hadlington",
                            Phone = "09225056729"
                        },
                        new
                        {
                            Customer_Id = new Guid("df64bc95-0eaa-4a54-95c2-1162601073a1"),
                            Address = "624 Buhler Point",
                            DOB = new DateTime(1994, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mcrummaya@tripod.com",
                            FirstName = "Meggy",
                            Gender = "Female",
                            LastName = "Crummay",
                            Phone = "09392511444"
                        },
                        new
                        {
                            Customer_Id = new Guid("c964b5bd-0f8a-4fea-95d7-b505e5e1b77d"),
                            Address = "64071 Acker Park",
                            DOB = new DateTime(1997, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "cakramb@wsj.com",
                            FirstName = "Catlin",
                            Gender = "Female",
                            LastName = "Akram",
                            Phone = "09093870858"
                        },
                        new
                        {
                            Customer_Id = new Guid("25d173b3-e450-4cbe-ab3a-adc4e2f43b35"),
                            Address = "58172 Ruskin Crossing",
                            DOB = new DateTime(1965, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tcantoc@msu.edu",
                            FirstName = "Trenton",
                            Gender = "Male",
                            LastName = "Canto",
                            Phone = "09809339189"
                        },
                        new
                        {
                            Customer_Id = new Guid("3ddf8fc9-e930-4374-bba6-ad2ae5992e12"),
                            Address = "1 Pond Center",
                            DOB = new DateTime(1996, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mmularkeyd@typepad.com",
                            FirstName = "Montague",
                            Gender = "Male",
                            LastName = "Mularkey",
                            Phone = "09306995169"
                        },
                        new
                        {
                            Customer_Id = new Guid("e236ad2f-5f69-48b9-9f81-4811d753c517"),
                            Address = "4526 Northfield Road",
                            DOB = new DateTime(1953, 3, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mmerryfielde@nih.gov",
                            FirstName = "Morganica",
                            Gender = "Female",
                            LastName = "Merryfield",
                            Phone = "09003901945"
                        },
                        new
                        {
                            Customer_Id = new Guid("ab564f5a-7c79-476d-8eb1-72d289910e02"),
                            Address = "03722 Westridge Court",
                            DOB = new DateTime(1997, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "cthomkinsf@etsy.com",
                            FirstName = "Con",
                            Gender = "Female",
                            LastName = "Thomkins",
                            Phone = "09939955254"
                        },
                        new
                        {
                            Customer_Id = new Guid("686c94e2-8404-48ea-a3a9-113683dbf91e"),
                            Address = "62956 1st Street",
                            DOB = new DateTime(1972, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "rmorgang@bbc.co.uk",
                            FirstName = "Rudy",
                            Gender = "Male",
                            LastName = "Morgan",
                            Phone = "09597429865"
                        },
                        new
                        {
                            Customer_Id = new Guid("ff8518a8-4c26-4498-81e2-54ff36610da1"),
                            Address = "57 Hagan Point",
                            DOB = new DateTime(1992, 8, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "rskedgeh@google.de",
                            FirstName = "Rhianna",
                            Gender = "Female",
                            LastName = "Skedge",
                            Phone = "09956873369"
                        },
                        new
                        {
                            Customer_Id = new Guid("5013f5fb-10c7-4ea6-9f9b-1606cdd5d14a"),
                            Address = "9664 Redwing Court",
                            DOB = new DateTime(1991, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "fstoweri@engadget.com",
                            FirstName = "Farlee",
                            Gender = "Male",
                            LastName = "Stower",
                            Phone = "09579026072"
                        },
                        new
                        {
                            Customer_Id = new Guid("f922f1bd-9f37-48f9-ada5-d04c66997702"),
                            Address = "1 Dawn Circle",
                            DOB = new DateTime(1994, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ddimnagej@etsy.com",
                            FirstName = "Delano",
                            Gender = "Male",
                            LastName = "Dimnage",
                            Phone = "09662401440"
                        });
                });

            modelBuilder.Entity("CustomersAPI.Models.Transactions", b =>
                {
                    b.Property<Guid>("Transaction_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("TransactionDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.HasKey("Transaction_Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("TRANSACTIONS LIST", (string)null);

                    b.HasData(
                        new
                        {
                            Transaction_Id = new Guid("5a0f36b0-2f86-425c-b969-7249a7f632e4"),
                            Amount = 6068.91m,
                            CustomerId = new Guid("e236ad2f-5f69-48b9-9f81-4811d753c517"),
                            TransactionDate = new DateTime(2022, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("e6f6a219-b9e3-4267-a117-2948a63456f5"),
                            Amount = 6523.52m,
                            CustomerId = new Guid("e236ad2f-5f69-48b9-9f81-4811d753c517"),
                            TransactionDate = new DateTime(2022, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("f6d4e3f5-ea9f-4b73-9d2b-4c1c6b9f6801"),
                            Amount = 16861.07m,
                            CustomerId = new Guid("f922f1bd-9f37-48f9-ada5-d04c66997702"),
                            TransactionDate = new DateTime(2022, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("ab971818-0b6d-44d3-95ae-13b56e46735c"),
                            Amount = 15743.60m,
                            CustomerId = new Guid("b145378d-e789-4d64-a780-d1442c8535d6"),
                            TransactionDate = new DateTime(2022, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("50661ce2-e89a-46f0-ba79-dab4d530636a"),
                            Amount = 3896.77m,
                            CustomerId = new Guid("ad7fcf33-d684-4cc8-bfa4-c85608a1983c"),
                            TransactionDate = new DateTime(2023, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("300b5bb3-c2fd-491b-ab2f-abdcc422a00d"),
                            Amount = 14115.62m,
                            CustomerId = new Guid("686c94e2-8404-48ea-a3a9-113683dbf91e"),
                            TransactionDate = new DateTime(2022, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("dfbd25a7-c9f9-42c6-b79f-d63fc2d9ac6c"),
                            Amount = 1347.45m,
                            CustomerId = new Guid("5013f5fb-10c7-4ea6-9f9b-1606cdd5d14a"),
                            TransactionDate = new DateTime(2022, 11, 28, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("4d6fea88-03ee-4893-adee-8d17b009024c"),
                            Amount = 19644.39m,
                            CustomerId = new Guid("686c94e2-8404-48ea-a3a9-113683dbf91e"),
                            TransactionDate = new DateTime(2022, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("9b282000-0cd2-474a-bd7a-cb449cc0e858"),
                            Amount = 14420.64m,
                            CustomerId = new Guid("81c08149-429f-4dea-9111-942e16d2d1ac"),
                            TransactionDate = new DateTime(2022, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("c836a1b0-a6b9-4592-b2b1-191286156986"),
                            Amount = 13405.27m,
                            CustomerId = new Guid("584f1e80-2f0d-4078-b10a-56f663e629e0"),
                            TransactionDate = new DateTime(2022, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("8c1eec06-8c28-4000-bddb-2db28f03cd48"),
                            Amount = 14215.58m,
                            CustomerId = new Guid("4c692151-e8b5-4af7-bd93-3c7a7255efb0"),
                            TransactionDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("cb80de1f-202c-46c0-9eeb-6e947d3fdc04"),
                            Amount = 17181.86m,
                            CustomerId = new Guid("f922f1bd-9f37-48f9-ada5-d04c66997702"),
                            TransactionDate = new DateTime(2022, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("8f94c2ea-2c4f-477e-9437-0699fae9fef2"),
                            Amount = 12838.18m,
                            CustomerId = new Guid("3ddf8fc9-e930-4374-bba6-ad2ae5992e12"),
                            TransactionDate = new DateTime(2022, 10, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("683036d7-5f9f-42b5-b1a0-65cc0f5f8aae"),
                            Amount = 3399.04m,
                            CustomerId = new Guid("25d173b3-e450-4cbe-ab3a-adc4e2f43b35"),
                            TransactionDate = new DateTime(2023, 1, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("f34e6464-c449-4544-b659-ede960983105"),
                            Amount = 19017.30m,
                            CustomerId = new Guid("db589b15-9e4a-42b6-9e44-d5db4d1e9132"),
                            TransactionDate = new DateTime(2022, 10, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("f4e96df8-2276-49fb-9ae5-1fbdbdb75182"),
                            Amount = 12621.27m,
                            CustomerId = new Guid("df64bc95-0eaa-4a54-95c2-1162601073a1"),
                            TransactionDate = new DateTime(2022, 6, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("56284609-eec8-48f6-8e4c-dab01f5873bb"),
                            Amount = 8205.19m,
                            CustomerId = new Guid("81c08149-429f-4dea-9111-942e16d2d1ac"),
                            TransactionDate = new DateTime(2022, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("c91c9093-4179-47c7-9fc2-8921fc91ec69"),
                            Amount = 18900.31m,
                            CustomerId = new Guid("ab564f5a-7c79-476d-8eb1-72d289910e02"),
                            TransactionDate = new DateTime(2022, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("5b5dad15-1317-4e6c-8794-f4229b06f3b7"),
                            Amount = 19958.59m,
                            CustomerId = new Guid("f922f1bd-9f37-48f9-ada5-d04c66997702"),
                            TransactionDate = new DateTime(2022, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("4ce62424-2b24-4208-a202-7031fed1c79b"),
                            Amount = 13524.20m,
                            CustomerId = new Guid("f922f1bd-9f37-48f9-ada5-d04c66997702"),
                            TransactionDate = new DateTime(2022, 9, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("bbb6e472-ebec-428c-b9c3-03194700bce6"),
                            Amount = 7914.91m,
                            CustomerId = new Guid("5013f5fb-10c7-4ea6-9f9b-1606cdd5d14a"),
                            TransactionDate = new DateTime(2022, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("441bfef5-d2a4-4a4a-8d95-36e6cf7e98f0"),
                            Amount = 14447.04m,
                            CustomerId = new Guid("5c783ed5-3f6f-48b9-81b0-d01d91c0416c"),
                            TransactionDate = new DateTime(2022, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("aaf42a5b-5072-4bbf-9a1d-7fb3ea4e61bb"),
                            Amount = 4079.20m,
                            CustomerId = new Guid("25d173b3-e450-4cbe-ab3a-adc4e2f43b35"),
                            TransactionDate = new DateTime(2022, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("f7c57a93-1693-4954-a32f-753be48e94cb"),
                            Amount = 17809.47m,
                            CustomerId = new Guid("ff8518a8-4c26-4498-81e2-54ff36610da1"),
                            TransactionDate = new DateTime(2023, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("6d847e6b-4559-4b65-a95b-10e2c41746be"),
                            Amount = 12163.93m,
                            CustomerId = new Guid("584f1e80-2f0d-4078-b10a-56f663e629e0"),
                            TransactionDate = new DateTime(2023, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("2c2a9c67-4f77-46d5-91fd-64a07a406192"),
                            Amount = 10839.38m,
                            CustomerId = new Guid("197c03f8-206e-430e-ba15-5d8e1d0148f0"),
                            TransactionDate = new DateTime(2023, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("91dbafdd-7b09-411f-b171-408f0da1e130"),
                            Amount = 17362.33m,
                            CustomerId = new Guid("ad7fcf33-d684-4cc8-bfa4-c85608a1983c"),
                            TransactionDate = new DateTime(2022, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("2007e092-84b4-4d72-8124-7b8aed601e53"),
                            Amount = 15326.44m,
                            CustomerId = new Guid("81c08149-429f-4dea-9111-942e16d2d1ac"),
                            TransactionDate = new DateTime(2023, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("2bcc2dd0-3354-49f8-a376-184953eda0b4"),
                            Amount = 15225.41m,
                            CustomerId = new Guid("5c783ed5-3f6f-48b9-81b0-d01d91c0416c"),
                            TransactionDate = new DateTime(2023, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("b7005309-8b3a-4a9a-b9c9-644a3732eee3"),
                            Amount = 8243.38m,
                            CustomerId = new Guid("9aaf47ce-6b35-4f09-a8e3-9873d05e7c68"),
                            TransactionDate = new DateTime(2023, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("04cb42fa-7054-4121-a03b-b603a5b1e45d"),
                            Amount = 19646.52m,
                            CustomerId = new Guid("ab564f5a-7c79-476d-8eb1-72d289910e02"),
                            TransactionDate = new DateTime(2022, 8, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("424ed013-499f-49ac-beb5-eb5a40186532"),
                            Amount = 5587.62m,
                            CustomerId = new Guid("ff8518a8-4c26-4498-81e2-54ff36610da1"),
                            TransactionDate = new DateTime(2023, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("711967b0-656c-4bd3-8d12-5fde2a0a7c55"),
                            Amount = 8628.20m,
                            CustomerId = new Guid("e236ad2f-5f69-48b9-9f81-4811d753c517"),
                            TransactionDate = new DateTime(2023, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("45486c9a-eb3e-40e2-accb-5c29aea8aa0f"),
                            Amount = 3134.06m,
                            CustomerId = new Guid("5c783ed5-3f6f-48b9-81b0-d01d91c0416c"),
                            TransactionDate = new DateTime(2022, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("88714454-5953-4001-959d-41676d7bbac0"),
                            Amount = 7895.30m,
                            CustomerId = new Guid("3ddf8fc9-e930-4374-bba6-ad2ae5992e12"),
                            TransactionDate = new DateTime(2022, 12, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("2aa996ab-8748-45af-a024-326780e9dae7"),
                            Amount = 2116.34m,
                            CustomerId = new Guid("e236ad2f-5f69-48b9-9f81-4811d753c517"),
                            TransactionDate = new DateTime(2022, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("38f8c401-8a1f-4c95-8bc8-bd56417b4249"),
                            Amount = 14523.92m,
                            CustomerId = new Guid("9aaf47ce-6b35-4f09-a8e3-9873d05e7c68"),
                            TransactionDate = new DateTime(2022, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("cdced319-0d90-43ae-a12a-aff9a52fd776"),
                            Amount = 15192.52m,
                            CustomerId = new Guid("25d173b3-e450-4cbe-ab3a-adc4e2f43b35"),
                            TransactionDate = new DateTime(2023, 1, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("3328392f-c327-43d2-82ec-962e61b20ad3"),
                            Amount = 11703.50m,
                            CustomerId = new Guid("b145378d-e789-4d64-a780-d1442c8535d6"),
                            TransactionDate = new DateTime(2022, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("2176f885-284b-4b48-a699-df1478a1d22c"),
                            Amount = 9842.85m,
                            CustomerId = new Guid("5013f5fb-10c7-4ea6-9f9b-1606cdd5d14a"),
                            TransactionDate = new DateTime(2022, 12, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("234eed23-bcfe-4b7a-85bf-bfcc6adc4413"),
                            Amount = 3940.43m,
                            CustomerId = new Guid("ff8518a8-4c26-4498-81e2-54ff36610da1"),
                            TransactionDate = new DateTime(2022, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("8d6b95f2-3a88-4b8f-8233-eef592bf99f4"),
                            Amount = 13910.67m,
                            CustomerId = new Guid("197c03f8-206e-430e-ba15-5d8e1d0148f0"),
                            TransactionDate = new DateTime(2022, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("1d4b695b-4fba-4cab-b259-adf5af54a09a"),
                            Amount = 1183.59m,
                            CustomerId = new Guid("c964b5bd-0f8a-4fea-95d7-b505e5e1b77d"),
                            TransactionDate = new DateTime(2022, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("e8601b02-f883-4268-81b1-cd3cf7b8074e"),
                            Amount = 12396.27m,
                            CustomerId = new Guid("ad7fcf33-d684-4cc8-bfa4-c85608a1983c"),
                            TransactionDate = new DateTime(2022, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("baf010b2-c8db-4638-a618-1a3cc0742cc1"),
                            Amount = 18095.37m,
                            CustomerId = new Guid("c964b5bd-0f8a-4fea-95d7-b505e5e1b77d"),
                            TransactionDate = new DateTime(2022, 7, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("e654c44c-8506-4f39-bd60-ff96f489d3f2"),
                            Amount = 7388.27m,
                            CustomerId = new Guid("3ddf8fc9-e930-4374-bba6-ad2ae5992e12"),
                            TransactionDate = new DateTime(2022, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("23c71c4d-234c-4909-9b21-6774fdbadeb1"),
                            Amount = 5204.34m,
                            CustomerId = new Guid("e236ad2f-5f69-48b9-9f81-4811d753c517"),
                            TransactionDate = new DateTime(2022, 9, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("af25dc5a-7fd0-46f5-b531-066f7c632da4"),
                            Amount = 14562.70m,
                            CustomerId = new Guid("f922f1bd-9f37-48f9-ada5-d04c66997702"),
                            TransactionDate = new DateTime(2023, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("d0728ccb-d0d5-4777-8e6e-c5f59ae2be1f"),
                            Amount = 12432.71m,
                            CustomerId = new Guid("c964b5bd-0f8a-4fea-95d7-b505e5e1b77d"),
                            TransactionDate = new DateTime(2023, 1, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("af28b644-e695-4019-ac71-ebf6cefcb533"),
                            Amount = 9929.75m,
                            CustomerId = new Guid("686c94e2-8404-48ea-a3a9-113683dbf91e"),
                            TransactionDate = new DateTime(2022, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("CustomersAPI.Models.Transactions", b =>
                {
                    b.HasOne("CustomersAPI.Models.Customer", "Customer")
                        .WithMany("Transactions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Customer_ID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("CustomersAPI.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("CustomersAPI.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CustomersAPI.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("CustomersAPI.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CustomersAPI.Models.Customer", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
