// <auto-generated />
using System;
using CustomersAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CustomersAPI.Migrations
{
    [DbContext(typeof(CustomerDBContext))]
    partial class CustomerDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CustomersAPI.Models.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("CustomersAPI.Models.Customer", b =>
                {
                    b.Property<Guid>("Customer_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("RegularExpression", "^(09|\\+639)\\d{9}$");

                    b.HasKey("Customer_Id");

                    b.ToTable("CUSTOMERS LIST", (string)null);

                    b.HasData(
                        new
                        {
                            Customer_Id = new Guid("5c789246-a36e-46fb-bbe0-59eeb68c19a6"),
                            Address = "5234 Crossing Street",
                            DOB = new DateTime(1975, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mauris.sagittis@icloud.edu",
                            FirstName = "Madeline",
                            Gender = "Female",
                            LastName = "Baxter",
                            Phone = "09123546789"
                        },
                        new
                        {
                            Customer_Id = new Guid("f65a5031-50a8-4893-9972-d05c7d88a2ae"),
                            Address = "3 Pepper Wood Center",
                            DOB = new DateTime(1984, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "aabrahamovitz0@marketwatch.com",
                            FirstName = "Agatha",
                            Gender = "Female",
                            LastName = "Abrahamovitz",
                            Phone = "09601729545"
                        },
                        new
                        {
                            Customer_Id = new Guid("efbf6381-b76b-49e8-9d3d-aa2ac7de0c71"),
                            Address = "97649 Corry Terrace",
                            DOB = new DateTime(1956, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mhabercham1@squidoo.com",
                            FirstName = "Maia",
                            Gender = "Female",
                            LastName = "Habercham",
                            Phone = "09184621695"
                        },
                        new
                        {
                            Customer_Id = new Guid("a809e63c-a6d8-4201-a18a-7da209801bd9"),
                            Address = "4608 Raven Parkway",
                            DOB = new DateTime(1987, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "amacrow2@globo.com",
                            FirstName = "Alane",
                            Gender = "Female",
                            LastName = "Macrow",
                            Phone = "09276939145"
                        },
                        new
                        {
                            Customer_Id = new Guid("ccb70d01-3249-4d5b-be97-560bbed7620f"),
                            Address = "2067 Golden Leaf Circle",
                            DOB = new DateTime(1964, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tedington3@illinois.edu",
                            FirstName = "Tracy",
                            Gender = "Male",
                            LastName = "Edington",
                            Phone = "09265235080"
                        },
                        new
                        {
                            Customer_Id = new Guid("c9fde16b-bebe-4160-a866-da2a1b2ca61f"),
                            Address = "52014 Leroy Hill",
                            DOB = new DateTime(1954, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hsimunek4@yellowpages.com",
                            FirstName = "Hinze",
                            Gender = "Male",
                            LastName = "Simunek",
                            Phone = "09267006937"
                        },
                        new
                        {
                            Customer_Id = new Guid("535ec1ed-3fdf-4691-9681-4d2c5d6738d2"),
                            Address = "673 Autumn Leaf Court",
                            DOB = new DateTime(2006, 7, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "asummerskill5@gravatar.com",
                            FirstName = "Angela",
                            Gender = "Female",
                            LastName = "Summerskill",
                            Phone = "09337435073"
                        },
                        new
                        {
                            Customer_Id = new Guid("8fe044ed-eabc-4354-b11e-4c962ccc63e5"),
                            Address = "9 Pleasure Way",
                            DOB = new DateTime(1978, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jbrowett6@mediafire.com",
                            FirstName = "Jed",
                            Gender = "Male",
                            LastName = "Browett",
                            Phone = "09143498357"
                        },
                        new
                        {
                            Customer_Id = new Guid("58545c34-7a1a-4ac8-8198-3cc391ef3ed0"),
                            Address = "17 Columbus Junction",
                            DOB = new DateTime(1955, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "gbilson7@prnewswire.com",
                            FirstName = "Georgianna",
                            Gender = "Female",
                            LastName = "Bilson",
                            Phone = "09397882449"
                        },
                        new
                        {
                            Customer_Id = new Guid("4fd960ab-2aa6-49d7-a526-2d0f4da21320"),
                            Address = "82368 Boyd Point",
                            DOB = new DateTime(2002, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ahave8@so-net.ne.jp",
                            FirstName = "Alister",
                            Gender = "Male",
                            LastName = "Have",
                            Phone = "09638397843"
                        },
                        new
                        {
                            Customer_Id = new Guid("0ab31e3a-858c-4f9f-9d62-dccb5cea16e2"),
                            Address = "59830 Brickson Park Road",
                            DOB = new DateTime(2001, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "khadlington9@paypal.com",
                            FirstName = "Kerianne",
                            Gender = "Female",
                            LastName = "Hadlington",
                            Phone = "09225056729"
                        },
                        new
                        {
                            Customer_Id = new Guid("cad23225-85c0-4f54-a4df-440df5c3d10c"),
                            Address = "624 Buhler Point",
                            DOB = new DateTime(1994, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mcrummaya@tripod.com",
                            FirstName = "Meggy",
                            Gender = "Female",
                            LastName = "Crummay",
                            Phone = "09392511444"
                        },
                        new
                        {
                            Customer_Id = new Guid("19ddd5d4-12fd-4357-a49d-05651d48b550"),
                            Address = "64071 Acker Park",
                            DOB = new DateTime(1997, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "cakramb@wsj.com",
                            FirstName = "Catlin",
                            Gender = "Female",
                            LastName = "Akram",
                            Phone = "09093870858"
                        },
                        new
                        {
                            Customer_Id = new Guid("429408a7-890c-4f07-bfa8-c76da7def723"),
                            Address = "58172 Ruskin Crossing",
                            DOB = new DateTime(1965, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tcantoc@msu.edu",
                            FirstName = "Trenton",
                            Gender = "Male",
                            LastName = "Canto",
                            Phone = "09809339189"
                        },
                        new
                        {
                            Customer_Id = new Guid("c073d015-78ac-4436-a555-fc74eeba640c"),
                            Address = "1 Pond Center",
                            DOB = new DateTime(1996, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mmularkeyd@typepad.com",
                            FirstName = "Montague",
                            Gender = "Male",
                            LastName = "Mularkey",
                            Phone = "09306995169"
                        },
                        new
                        {
                            Customer_Id = new Guid("ab8633c3-3056-4dff-88a9-4066c0bd2114"),
                            Address = "4526 Northfield Road",
                            DOB = new DateTime(1953, 3, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mmerryfielde@nih.gov",
                            FirstName = "Morganica",
                            Gender = "Female",
                            LastName = "Merryfield",
                            Phone = "09003901945"
                        },
                        new
                        {
                            Customer_Id = new Guid("b7faef3d-2d5b-4e2a-8376-502b361c64d3"),
                            Address = "03722 Westridge Court",
                            DOB = new DateTime(1997, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "cthomkinsf@etsy.com",
                            FirstName = "Con",
                            Gender = "Female",
                            LastName = "Thomkins",
                            Phone = "09939955254"
                        },
                        new
                        {
                            Customer_Id = new Guid("460a787b-4f0f-44c6-840b-51d30c4e0566"),
                            Address = "62956 1st Street",
                            DOB = new DateTime(1972, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "rmorgang@bbc.co.uk",
                            FirstName = "Rudy",
                            Gender = "Male",
                            LastName = "Morgan",
                            Phone = "09597429865"
                        },
                        new
                        {
                            Customer_Id = new Guid("69b66251-6956-4eed-8811-e8d1de41de29"),
                            Address = "57 Hagan Point",
                            DOB = new DateTime(1992, 8, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "rskedgeh@google.de",
                            FirstName = "Rhianna",
                            Gender = "Female",
                            LastName = "Skedge",
                            Phone = "09956873369"
                        },
                        new
                        {
                            Customer_Id = new Guid("8f67ca88-92a0-40ae-92e8-9d0642fad52b"),
                            Address = "9664 Redwing Court",
                            DOB = new DateTime(1991, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "fstoweri@engadget.com",
                            FirstName = "Farlee",
                            Gender = "Male",
                            LastName = "Stower",
                            Phone = "09579026072"
                        },
                        new
                        {
                            Customer_Id = new Guid("cddd06e2-5def-47fa-ac26-606416b83717"),
                            Address = "1 Dawn Circle",
                            DOB = new DateTime(1994, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ddimnagej@etsy.com",
                            FirstName = "Delano",
                            Gender = "Male",
                            LastName = "Dimnage",
                            Phone = "09662401440"
                        });
                });

            modelBuilder.Entity("CustomersAPI.Models.Transactions", b =>
                {
                    b.Property<Guid>("Transaction_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("TransactionDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.HasKey("Transaction_Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("TRANSACTIONS LIST", (string)null);

                    b.HasData(
                        new
                        {
                            Transaction_Id = new Guid("e91cf5b6-016d-4f27-ab85-cde749f2e79b"),
                            Amount = 6068.91m,
                            CustomerId = new Guid("ab8633c3-3056-4dff-88a9-4066c0bd2114"),
                            TransactionDate = new DateTime(2022, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("f9e411f6-b7fd-46ce-aea7-b5c6608bf7da"),
                            Amount = 6523.52m,
                            CustomerId = new Guid("ab8633c3-3056-4dff-88a9-4066c0bd2114"),
                            TransactionDate = new DateTime(2022, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("71fc4c48-1991-45c1-a1ca-71d29018335e"),
                            Amount = 16861.07m,
                            CustomerId = new Guid("cddd06e2-5def-47fa-ac26-606416b83717"),
                            TransactionDate = new DateTime(2022, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("3e66e1a0-8182-49df-aa5c-ec0cbd32f60f"),
                            Amount = 15743.60m,
                            CustomerId = new Guid("c9fde16b-bebe-4160-a866-da2a1b2ca61f"),
                            TransactionDate = new DateTime(2022, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("c46aea69-8326-405d-be63-bdbf2c5c5703"),
                            Amount = 3896.77m,
                            CustomerId = new Guid("a809e63c-a6d8-4201-a18a-7da209801bd9"),
                            TransactionDate = new DateTime(2023, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("b0e5e17f-4caf-40f2-b598-ec550002b667"),
                            Amount = 14115.62m,
                            CustomerId = new Guid("460a787b-4f0f-44c6-840b-51d30c4e0566"),
                            TransactionDate = new DateTime(2022, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("b23855af-40a5-46c0-b678-ed1a04271c3f"),
                            Amount = 1347.45m,
                            CustomerId = new Guid("8f67ca88-92a0-40ae-92e8-9d0642fad52b"),
                            TransactionDate = new DateTime(2022, 11, 28, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("9915dd35-4bfa-4f40-9ac1-ff2c074a9fcc"),
                            Amount = 19644.39m,
                            CustomerId = new Guid("460a787b-4f0f-44c6-840b-51d30c4e0566"),
                            TransactionDate = new DateTime(2022, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("2ad1ec8a-6b9e-4fc8-96f9-efbae0f65dfa"),
                            Amount = 14420.64m,
                            CustomerId = new Guid("8fe044ed-eabc-4354-b11e-4c962ccc63e5"),
                            TransactionDate = new DateTime(2022, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("bd2853cf-3ae4-46e0-b6cf-1f77a45485c1"),
                            Amount = 13405.27m,
                            CustomerId = new Guid("ccb70d01-3249-4d5b-be97-560bbed7620f"),
                            TransactionDate = new DateTime(2022, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("7672faa0-628d-478a-9583-614c30f8438c"),
                            Amount = 14215.58m,
                            CustomerId = new Guid("535ec1ed-3fdf-4691-9681-4d2c5d6738d2"),
                            TransactionDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("7eb10987-d455-4b4f-b5ad-fe1526e2f63f"),
                            Amount = 17181.86m,
                            CustomerId = new Guid("cddd06e2-5def-47fa-ac26-606416b83717"),
                            TransactionDate = new DateTime(2022, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("90429ab2-bedb-47b4-ab00-de533c3d9513"),
                            Amount = 12838.18m,
                            CustomerId = new Guid("c073d015-78ac-4436-a555-fc74eeba640c"),
                            TransactionDate = new DateTime(2022, 10, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("794c832d-4384-4fd6-823d-59f2c9caab42"),
                            Amount = 3399.04m,
                            CustomerId = new Guid("429408a7-890c-4f07-bfa8-c76da7def723"),
                            TransactionDate = new DateTime(2023, 1, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("ea192ce4-ca54-4f15-afd2-9f038701dbc5"),
                            Amount = 19017.30m,
                            CustomerId = new Guid("f65a5031-50a8-4893-9972-d05c7d88a2ae"),
                            TransactionDate = new DateTime(2022, 10, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("89a2712b-23a2-478c-89c1-9bd9fb013f52"),
                            Amount = 12621.27m,
                            CustomerId = new Guid("cad23225-85c0-4f54-a4df-440df5c3d10c"),
                            TransactionDate = new DateTime(2022, 6, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("cb3d2ae9-10bc-4348-a840-0ffac47ab7f5"),
                            Amount = 8205.19m,
                            CustomerId = new Guid("8fe044ed-eabc-4354-b11e-4c962ccc63e5"),
                            TransactionDate = new DateTime(2022, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("60198401-9a0b-4ab4-80da-eaac6ad45e66"),
                            Amount = 18900.31m,
                            CustomerId = new Guid("b7faef3d-2d5b-4e2a-8376-502b361c64d3"),
                            TransactionDate = new DateTime(2022, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("13779749-17d8-4c81-925d-aae22b43b1f6"),
                            Amount = 19958.59m,
                            CustomerId = new Guid("cddd06e2-5def-47fa-ac26-606416b83717"),
                            TransactionDate = new DateTime(2022, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("99d73a89-654f-47d2-ba74-481c6ad40a44"),
                            Amount = 13524.20m,
                            CustomerId = new Guid("cddd06e2-5def-47fa-ac26-606416b83717"),
                            TransactionDate = new DateTime(2022, 9, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("2f422d76-474d-46e4-a1c9-27c5eaadc58c"),
                            Amount = 7914.91m,
                            CustomerId = new Guid("8f67ca88-92a0-40ae-92e8-9d0642fad52b"),
                            TransactionDate = new DateTime(2022, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("66ce3b0b-732d-4c32-9be1-eed024b41e24"),
                            Amount = 14447.04m,
                            CustomerId = new Guid("4fd960ab-2aa6-49d7-a526-2d0f4da21320"),
                            TransactionDate = new DateTime(2022, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("99970be2-cd67-4ef7-9f8a-d31b24a5cfb6"),
                            Amount = 4079.20m,
                            CustomerId = new Guid("429408a7-890c-4f07-bfa8-c76da7def723"),
                            TransactionDate = new DateTime(2022, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("e998fba6-3572-443f-a1d8-100355be9b77"),
                            Amount = 17809.47m,
                            CustomerId = new Guid("69b66251-6956-4eed-8811-e8d1de41de29"),
                            TransactionDate = new DateTime(2023, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("3a1d2074-7cc8-4295-812b-8f32bfc2fd04"),
                            Amount = 12163.93m,
                            CustomerId = new Guid("ccb70d01-3249-4d5b-be97-560bbed7620f"),
                            TransactionDate = new DateTime(2023, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("971487b8-aadb-4663-9f0f-9e411ce72c6d"),
                            Amount = 10839.38m,
                            CustomerId = new Guid("58545c34-7a1a-4ac8-8198-3cc391ef3ed0"),
                            TransactionDate = new DateTime(2023, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("053eba4a-064f-4c98-ab7a-033efc39c64e"),
                            Amount = 17362.33m,
                            CustomerId = new Guid("a809e63c-a6d8-4201-a18a-7da209801bd9"),
                            TransactionDate = new DateTime(2022, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("4f59bb35-e5d0-4228-b5c8-f915e7c2e169"),
                            Amount = 15326.44m,
                            CustomerId = new Guid("8fe044ed-eabc-4354-b11e-4c962ccc63e5"),
                            TransactionDate = new DateTime(2023, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("6d95657c-3ec0-4771-85f8-1f3742755795"),
                            Amount = 15225.41m,
                            CustomerId = new Guid("4fd960ab-2aa6-49d7-a526-2d0f4da21320"),
                            TransactionDate = new DateTime(2023, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("f044e6e8-d6e7-46d6-8e22-5f5423a8205e"),
                            Amount = 8243.38m,
                            CustomerId = new Guid("efbf6381-b76b-49e8-9d3d-aa2ac7de0c71"),
                            TransactionDate = new DateTime(2023, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("1aa2305b-821a-4bbf-a4ae-33f431f5d688"),
                            Amount = 19646.52m,
                            CustomerId = new Guid("b7faef3d-2d5b-4e2a-8376-502b361c64d3"),
                            TransactionDate = new DateTime(2022, 8, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("47f20f44-5027-4885-b127-2f05c06a1313"),
                            Amount = 5587.62m,
                            CustomerId = new Guid("69b66251-6956-4eed-8811-e8d1de41de29"),
                            TransactionDate = new DateTime(2023, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("78767eca-ca8e-4df5-8a6c-298e5954a012"),
                            Amount = 8628.20m,
                            CustomerId = new Guid("ab8633c3-3056-4dff-88a9-4066c0bd2114"),
                            TransactionDate = new DateTime(2023, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("7a2fca26-491e-4b57-9aa4-c5118c2c1be3"),
                            Amount = 3134.06m,
                            CustomerId = new Guid("4fd960ab-2aa6-49d7-a526-2d0f4da21320"),
                            TransactionDate = new DateTime(2022, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("736ec3b4-2fa7-4b60-8afd-5e1d8e3decd3"),
                            Amount = 7895.30m,
                            CustomerId = new Guid("c073d015-78ac-4436-a555-fc74eeba640c"),
                            TransactionDate = new DateTime(2022, 12, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("39a71a4a-f8bf-4dee-98a3-20f53b519b25"),
                            Amount = 2116.34m,
                            CustomerId = new Guid("ab8633c3-3056-4dff-88a9-4066c0bd2114"),
                            TransactionDate = new DateTime(2022, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("4b127757-2bbd-4a7c-a8d0-5ac50763b4fd"),
                            Amount = 14523.92m,
                            CustomerId = new Guid("efbf6381-b76b-49e8-9d3d-aa2ac7de0c71"),
                            TransactionDate = new DateTime(2022, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("d356e4a8-ed99-4e57-8c0c-a877f4efef51"),
                            Amount = 15192.52m,
                            CustomerId = new Guid("429408a7-890c-4f07-bfa8-c76da7def723"),
                            TransactionDate = new DateTime(2023, 1, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("c3381e92-d999-4572-a572-616fc2769014"),
                            Amount = 11703.50m,
                            CustomerId = new Guid("c9fde16b-bebe-4160-a866-da2a1b2ca61f"),
                            TransactionDate = new DateTime(2022, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("8dfec47d-105d-4885-a924-02e868d25b37"),
                            Amount = 9842.85m,
                            CustomerId = new Guid("8f67ca88-92a0-40ae-92e8-9d0642fad52b"),
                            TransactionDate = new DateTime(2022, 12, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("f2ec6b80-f589-4c62-9462-e0938e77635d"),
                            Amount = 3940.43m,
                            CustomerId = new Guid("69b66251-6956-4eed-8811-e8d1de41de29"),
                            TransactionDate = new DateTime(2022, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("c2f6c4a0-d975-48cb-87b7-45b8c365a66e"),
                            Amount = 13910.67m,
                            CustomerId = new Guid("58545c34-7a1a-4ac8-8198-3cc391ef3ed0"),
                            TransactionDate = new DateTime(2022, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("2b775dc1-46c4-45e0-9458-b016e50e9ecc"),
                            Amount = 1183.59m,
                            CustomerId = new Guid("19ddd5d4-12fd-4357-a49d-05651d48b550"),
                            TransactionDate = new DateTime(2022, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("e484145a-1e79-4e57-9b7d-e421855ab075"),
                            Amount = 12396.27m,
                            CustomerId = new Guid("a809e63c-a6d8-4201-a18a-7da209801bd9"),
                            TransactionDate = new DateTime(2022, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("a9aaebad-94f3-49be-bf1f-5cadd7c2e140"),
                            Amount = 18095.37m,
                            CustomerId = new Guid("19ddd5d4-12fd-4357-a49d-05651d48b550"),
                            TransactionDate = new DateTime(2022, 7, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("e2897d64-a559-4917-b2a1-9cd04717e9f6"),
                            Amount = 7388.27m,
                            CustomerId = new Guid("c073d015-78ac-4436-a555-fc74eeba640c"),
                            TransactionDate = new DateTime(2022, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("a7c37cb5-f8ed-4d03-8173-905d0db3b322"),
                            Amount = 5204.34m,
                            CustomerId = new Guid("ab8633c3-3056-4dff-88a9-4066c0bd2114"),
                            TransactionDate = new DateTime(2022, 9, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("6708028c-d98f-45f6-a9c9-78142413e7ac"),
                            Amount = 14562.70m,
                            CustomerId = new Guid("cddd06e2-5def-47fa-ac26-606416b83717"),
                            TransactionDate = new DateTime(2023, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("d975ce29-a6f7-4318-b937-3727a04a5b70"),
                            Amount = 12432.71m,
                            CustomerId = new Guid("19ddd5d4-12fd-4357-a49d-05651d48b550"),
                            TransactionDate = new DateTime(2023, 1, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("dd5a2ce8-3ef5-44db-b292-62135b663c99"),
                            Amount = 9929.75m,
                            CustomerId = new Guid("460a787b-4f0f-44c6-840b-51d30c4e0566"),
                            TransactionDate = new DateTime(2022, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("CustomersAPI.Models.Transactions", b =>
                {
                    b.HasOne("CustomersAPI.Models.Customer", "Customer")
                        .WithMany("Transactions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Customer_ID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("CustomersAPI.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("CustomersAPI.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CustomersAPI.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("CustomersAPI.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CustomersAPI.Models.Customer", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
