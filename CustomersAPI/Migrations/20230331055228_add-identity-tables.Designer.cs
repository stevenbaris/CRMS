// <auto-generated />
using System;
using CustomersAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CustomersAPI.Migrations
{
    [DbContext(typeof(CustomerDBContext))]
    [Migration("20230331055228_add-identity-tables")]
    partial class addidentitytables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CustomersAPI.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DPB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("CustomersAPI.Models.Customer", b =>
                {
                    b.Property<Guid>("Customer_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("RegularExpression", "^(09|\\+639)\\d{9}$");

                    b.HasKey("Customer_Id");

                    b.ToTable("CUSTOMERS LIST", (string)null);

                    b.HasData(
                        new
                        {
                            Customer_Id = new Guid("7542a331-0acb-456d-aa4a-69408e961c7e"),
                            Address = "5234 Crossing Street",
                            DOB = new DateTime(1975, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mauris.sagittis@icloud.edu",
                            FirstName = "Madeline",
                            Gender = "Female",
                            LastName = "Baxter",
                            Phone = "09123546789"
                        },
                        new
                        {
                            Customer_Id = new Guid("f78387e5-f4bc-45eb-b3fe-eadaf8a3c9eb"),
                            Address = "3 Pepper Wood Center",
                            DOB = new DateTime(1984, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "aabrahamovitz0@marketwatch.com",
                            FirstName = "Agatha",
                            Gender = "Female",
                            LastName = "Abrahamovitz",
                            Phone = "09601729545"
                        },
                        new
                        {
                            Customer_Id = new Guid("07482d17-53f6-4a85-966c-29b4d7ce7de1"),
                            Address = "97649 Corry Terrace",
                            DOB = new DateTime(1956, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mhabercham1@squidoo.com",
                            FirstName = "Maia",
                            Gender = "Female",
                            LastName = "Habercham",
                            Phone = "09184621695"
                        },
                        new
                        {
                            Customer_Id = new Guid("b52e01f1-851b-4569-953b-c20046b0c861"),
                            Address = "4608 Raven Parkway",
                            DOB = new DateTime(1987, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "amacrow2@globo.com",
                            FirstName = "Alane",
                            Gender = "Female",
                            LastName = "Macrow",
                            Phone = "09276939145"
                        },
                        new
                        {
                            Customer_Id = new Guid("265029c1-3bfa-491c-a2e3-77b4aa0e6919"),
                            Address = "2067 Golden Leaf Circle",
                            DOB = new DateTime(1964, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tedington3@illinois.edu",
                            FirstName = "Tracy",
                            Gender = "Male",
                            LastName = "Edington",
                            Phone = "09265235080"
                        },
                        new
                        {
                            Customer_Id = new Guid("8bc9242e-eb01-4e3b-ac34-3a4c51ee0dd5"),
                            Address = "52014 Leroy Hill",
                            DOB = new DateTime(1954, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hsimunek4@yellowpages.com",
                            FirstName = "Hinze",
                            Gender = "Male",
                            LastName = "Simunek",
                            Phone = "09267006937"
                        },
                        new
                        {
                            Customer_Id = new Guid("efa5c6ed-737f-4725-b790-31d5f1d485e3"),
                            Address = "673 Autumn Leaf Court",
                            DOB = new DateTime(2006, 7, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "asummerskill5@gravatar.com",
                            FirstName = "Angela",
                            Gender = "Female",
                            LastName = "Summerskill",
                            Phone = "09337435073"
                        },
                        new
                        {
                            Customer_Id = new Guid("a7381640-49b3-492a-a5df-3c2dbf84f0dc"),
                            Address = "9 Pleasure Way",
                            DOB = new DateTime(1978, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jbrowett6@mediafire.com",
                            FirstName = "Jed",
                            Gender = "Male",
                            LastName = "Browett",
                            Phone = "09143498357"
                        },
                        new
                        {
                            Customer_Id = new Guid("e97606f4-20f8-41b4-8021-dd62ee3e7af4"),
                            Address = "17 Columbus Junction",
                            DOB = new DateTime(1955, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "gbilson7@prnewswire.com",
                            FirstName = "Georgianna",
                            Gender = "Female",
                            LastName = "Bilson",
                            Phone = "09397882449"
                        },
                        new
                        {
                            Customer_Id = new Guid("8609f4ff-cb19-40a2-ac26-0503979f8ee0"),
                            Address = "82368 Boyd Point",
                            DOB = new DateTime(2002, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ahave8@so-net.ne.jp",
                            FirstName = "Alister",
                            Gender = "Male",
                            LastName = "Have",
                            Phone = "09638397843"
                        },
                        new
                        {
                            Customer_Id = new Guid("b0c6444c-d1b7-461d-bee3-602e6d087157"),
                            Address = "59830 Brickson Park Road",
                            DOB = new DateTime(2001, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "khadlington9@paypal.com",
                            FirstName = "Kerianne",
                            Gender = "Female",
                            LastName = "Hadlington",
                            Phone = "09225056729"
                        },
                        new
                        {
                            Customer_Id = new Guid("c8b31cd1-0e78-431d-b197-6ca1b889ae0e"),
                            Address = "624 Buhler Point",
                            DOB = new DateTime(1994, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mcrummaya@tripod.com",
                            FirstName = "Meggy",
                            Gender = "Female",
                            LastName = "Crummay",
                            Phone = "09392511444"
                        },
                        new
                        {
                            Customer_Id = new Guid("85f2a1c8-8ba7-4a49-9a72-6bcfe6249e80"),
                            Address = "64071 Acker Park",
                            DOB = new DateTime(1997, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "cakramb@wsj.com",
                            FirstName = "Catlin",
                            Gender = "Female",
                            LastName = "Akram",
                            Phone = "09093870858"
                        },
                        new
                        {
                            Customer_Id = new Guid("5d9ae272-7f04-4684-8b91-922b3c560b5c"),
                            Address = "58172 Ruskin Crossing",
                            DOB = new DateTime(1965, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tcantoc@msu.edu",
                            FirstName = "Trenton",
                            Gender = "Male",
                            LastName = "Canto",
                            Phone = "09809339189"
                        },
                        new
                        {
                            Customer_Id = new Guid("f3d7b703-d229-4c44-9e42-5ddb053b06f9"),
                            Address = "1 Pond Center",
                            DOB = new DateTime(1996, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mmularkeyd@typepad.com",
                            FirstName = "Montague",
                            Gender = "Male",
                            LastName = "Mularkey",
                            Phone = "09306995169"
                        },
                        new
                        {
                            Customer_Id = new Guid("5f3417fa-717d-4f59-8a82-82f111065d46"),
                            Address = "4526 Northfield Road",
                            DOB = new DateTime(1953, 3, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mmerryfielde@nih.gov",
                            FirstName = "Morganica",
                            Gender = "Female",
                            LastName = "Merryfield",
                            Phone = "09003901945"
                        },
                        new
                        {
                            Customer_Id = new Guid("128714b4-4cf5-4f18-9981-f91e75a5c44c"),
                            Address = "03722 Westridge Court",
                            DOB = new DateTime(1997, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "cthomkinsf@etsy.com",
                            FirstName = "Con",
                            Gender = "Female",
                            LastName = "Thomkins",
                            Phone = "09939955254"
                        },
                        new
                        {
                            Customer_Id = new Guid("8aba16ba-d548-4fff-8484-736013dcb769"),
                            Address = "62956 1st Street",
                            DOB = new DateTime(1972, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "rmorgang@bbc.co.uk",
                            FirstName = "Rudy",
                            Gender = "Male",
                            LastName = "Morgan",
                            Phone = "09597429865"
                        },
                        new
                        {
                            Customer_Id = new Guid("d64d6165-fb24-4114-9b74-f11388ec882d"),
                            Address = "57 Hagan Point",
                            DOB = new DateTime(1992, 8, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "rskedgeh@google.de",
                            FirstName = "Rhianna",
                            Gender = "Female",
                            LastName = "Skedge",
                            Phone = "09956873369"
                        },
                        new
                        {
                            Customer_Id = new Guid("b6dac918-b7bf-4d42-bfde-811ace993ac2"),
                            Address = "9664 Redwing Court",
                            DOB = new DateTime(1991, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "fstoweri@engadget.com",
                            FirstName = "Farlee",
                            Gender = "Male",
                            LastName = "Stower",
                            Phone = "09579026072"
                        },
                        new
                        {
                            Customer_Id = new Guid("ab3d0aaf-b23c-431b-96aa-40487cd61a1c"),
                            Address = "1 Dawn Circle",
                            DOB = new DateTime(1994, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ddimnagej@etsy.com",
                            FirstName = "Delano",
                            Gender = "Male",
                            LastName = "Dimnage",
                            Phone = "09662401440"
                        });
                });

            modelBuilder.Entity("CustomersAPI.Models.Transactions", b =>
                {
                    b.Property<Guid>("Transaction_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("TransactionDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.HasKey("Transaction_Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("TRANSACTIONS LIST", (string)null);

                    b.HasData(
                        new
                        {
                            Transaction_Id = new Guid("68f2def6-d6a4-48bd-8944-db2e65c89595"),
                            Amount = 6068.91m,
                            CustomerId = new Guid("5f3417fa-717d-4f59-8a82-82f111065d46"),
                            TransactionDate = new DateTime(2022, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("5019944e-bc49-4dac-b230-e4d5eee3423c"),
                            Amount = 6523.52m,
                            CustomerId = new Guid("5f3417fa-717d-4f59-8a82-82f111065d46"),
                            TransactionDate = new DateTime(2022, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("1cad8e98-54d3-418e-a71c-ffe5c341636a"),
                            Amount = 16861.07m,
                            CustomerId = new Guid("ab3d0aaf-b23c-431b-96aa-40487cd61a1c"),
                            TransactionDate = new DateTime(2022, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("6a00455e-53b4-42d3-8e1a-7abd96aade34"),
                            Amount = 15743.60m,
                            CustomerId = new Guid("8bc9242e-eb01-4e3b-ac34-3a4c51ee0dd5"),
                            TransactionDate = new DateTime(2022, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("788bd22e-79b6-4205-bba1-51357dd0d517"),
                            Amount = 3896.77m,
                            CustomerId = new Guid("b52e01f1-851b-4569-953b-c20046b0c861"),
                            TransactionDate = new DateTime(2023, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("21e8faf3-d86d-4e34-b23b-4137c4f8b6ae"),
                            Amount = 14115.62m,
                            CustomerId = new Guid("8aba16ba-d548-4fff-8484-736013dcb769"),
                            TransactionDate = new DateTime(2022, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("e677bdd2-4860-4d32-be3b-8e830e3e68ed"),
                            Amount = 1347.45m,
                            CustomerId = new Guid("b6dac918-b7bf-4d42-bfde-811ace993ac2"),
                            TransactionDate = new DateTime(2022, 11, 28, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("ac27e958-bfc8-4001-820b-9648558cfe35"),
                            Amount = 19644.39m,
                            CustomerId = new Guid("8aba16ba-d548-4fff-8484-736013dcb769"),
                            TransactionDate = new DateTime(2022, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("adfaa712-8b8e-4249-bd91-97b378ce3a28"),
                            Amount = 14420.64m,
                            CustomerId = new Guid("a7381640-49b3-492a-a5df-3c2dbf84f0dc"),
                            TransactionDate = new DateTime(2022, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("29c474f2-e994-432a-aaa7-246c764c9fd9"),
                            Amount = 13405.27m,
                            CustomerId = new Guid("265029c1-3bfa-491c-a2e3-77b4aa0e6919"),
                            TransactionDate = new DateTime(2022, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("8d0ebee5-2d48-4ba1-a4a8-8b9715bb16ae"),
                            Amount = 14215.58m,
                            CustomerId = new Guid("efa5c6ed-737f-4725-b790-31d5f1d485e3"),
                            TransactionDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("831f3973-3e5e-435c-bb83-19a636fad1af"),
                            Amount = 17181.86m,
                            CustomerId = new Guid("ab3d0aaf-b23c-431b-96aa-40487cd61a1c"),
                            TransactionDate = new DateTime(2022, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("17afdd55-bb06-4cc7-b5d0-f862c4d64b46"),
                            Amount = 12838.18m,
                            CustomerId = new Guid("f3d7b703-d229-4c44-9e42-5ddb053b06f9"),
                            TransactionDate = new DateTime(2022, 10, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("a0582992-ab04-4e99-9e0e-46bced6a3075"),
                            Amount = 3399.04m,
                            CustomerId = new Guid("5d9ae272-7f04-4684-8b91-922b3c560b5c"),
                            TransactionDate = new DateTime(2023, 1, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("1b57e387-c983-4719-a2f1-a5e1e8500d86"),
                            Amount = 19017.30m,
                            CustomerId = new Guid("f78387e5-f4bc-45eb-b3fe-eadaf8a3c9eb"),
                            TransactionDate = new DateTime(2022, 10, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("2af9ec8e-e7e5-4caa-ba70-9bff5673933f"),
                            Amount = 12621.27m,
                            CustomerId = new Guid("c8b31cd1-0e78-431d-b197-6ca1b889ae0e"),
                            TransactionDate = new DateTime(2022, 6, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("7fb9916d-08ca-48aa-bf4c-dcb9852cc8ad"),
                            Amount = 8205.19m,
                            CustomerId = new Guid("a7381640-49b3-492a-a5df-3c2dbf84f0dc"),
                            TransactionDate = new DateTime(2022, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("127e9dd6-d1a5-4638-b669-79d94f4c259e"),
                            Amount = 18900.31m,
                            CustomerId = new Guid("128714b4-4cf5-4f18-9981-f91e75a5c44c"),
                            TransactionDate = new DateTime(2022, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("79e8ca69-b814-48fe-ae92-58887338dd93"),
                            Amount = 19958.59m,
                            CustomerId = new Guid("ab3d0aaf-b23c-431b-96aa-40487cd61a1c"),
                            TransactionDate = new DateTime(2022, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("370571b3-3198-4d32-a050-953a8bdbd07d"),
                            Amount = 13524.20m,
                            CustomerId = new Guid("ab3d0aaf-b23c-431b-96aa-40487cd61a1c"),
                            TransactionDate = new DateTime(2022, 9, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("046d3881-9086-4dd8-9c55-f170e4181b7f"),
                            Amount = 7914.91m,
                            CustomerId = new Guid("b6dac918-b7bf-4d42-bfde-811ace993ac2"),
                            TransactionDate = new DateTime(2022, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("55c51fc6-0bbf-4144-8de1-8b0c77aa80ce"),
                            Amount = 14447.04m,
                            CustomerId = new Guid("8609f4ff-cb19-40a2-ac26-0503979f8ee0"),
                            TransactionDate = new DateTime(2022, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("4c8d9e12-885b-426f-b434-b24edb0e1344"),
                            Amount = 4079.20m,
                            CustomerId = new Guid("5d9ae272-7f04-4684-8b91-922b3c560b5c"),
                            TransactionDate = new DateTime(2022, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("d94177b0-3d24-4fe6-967c-cbd4304fb46c"),
                            Amount = 17809.47m,
                            CustomerId = new Guid("d64d6165-fb24-4114-9b74-f11388ec882d"),
                            TransactionDate = new DateTime(2023, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("44ef8c6a-fcd2-4f8c-90b2-a6752abd18a9"),
                            Amount = 12163.93m,
                            CustomerId = new Guid("265029c1-3bfa-491c-a2e3-77b4aa0e6919"),
                            TransactionDate = new DateTime(2023, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("c5e3bf9d-fe2a-4566-8c87-8a62b02b49bd"),
                            Amount = 10839.38m,
                            CustomerId = new Guid("e97606f4-20f8-41b4-8021-dd62ee3e7af4"),
                            TransactionDate = new DateTime(2023, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("61b349ad-bd63-4922-8a21-6b88ebaccd28"),
                            Amount = 17362.33m,
                            CustomerId = new Guid("b52e01f1-851b-4569-953b-c20046b0c861"),
                            TransactionDate = new DateTime(2022, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("e5df0a52-1a66-46eb-9e54-8f348489fdf8"),
                            Amount = 15326.44m,
                            CustomerId = new Guid("a7381640-49b3-492a-a5df-3c2dbf84f0dc"),
                            TransactionDate = new DateTime(2023, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("a2bf0ca9-df21-4eda-b57b-9bf653d919d4"),
                            Amount = 15225.41m,
                            CustomerId = new Guid("8609f4ff-cb19-40a2-ac26-0503979f8ee0"),
                            TransactionDate = new DateTime(2023, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("f2e8927d-6bb2-42d2-a8a9-7e10c87943b4"),
                            Amount = 8243.38m,
                            CustomerId = new Guid("07482d17-53f6-4a85-966c-29b4d7ce7de1"),
                            TransactionDate = new DateTime(2023, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("ee3973a8-86a6-4069-8a5c-50a22af4cd38"),
                            Amount = 19646.52m,
                            CustomerId = new Guid("128714b4-4cf5-4f18-9981-f91e75a5c44c"),
                            TransactionDate = new DateTime(2022, 8, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("ea225993-26cf-4fef-8a44-7faa5b877560"),
                            Amount = 5587.62m,
                            CustomerId = new Guid("d64d6165-fb24-4114-9b74-f11388ec882d"),
                            TransactionDate = new DateTime(2023, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("8c730089-5d14-4755-b1d1-aba4d8e04d93"),
                            Amount = 8628.20m,
                            CustomerId = new Guid("5f3417fa-717d-4f59-8a82-82f111065d46"),
                            TransactionDate = new DateTime(2023, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("c98be038-59a2-49de-9473-271a90c388b3"),
                            Amount = 3134.06m,
                            CustomerId = new Guid("8609f4ff-cb19-40a2-ac26-0503979f8ee0"),
                            TransactionDate = new DateTime(2022, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("16e5ac8e-60b0-46f0-bb66-0798e52d9426"),
                            Amount = 7895.30m,
                            CustomerId = new Guid("f3d7b703-d229-4c44-9e42-5ddb053b06f9"),
                            TransactionDate = new DateTime(2022, 12, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("f27c0c7a-6ecb-475a-b364-ba0689d7cf2c"),
                            Amount = 2116.34m,
                            CustomerId = new Guid("5f3417fa-717d-4f59-8a82-82f111065d46"),
                            TransactionDate = new DateTime(2022, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("e4c23ca7-122d-4744-9f36-4d82a8bac897"),
                            Amount = 14523.92m,
                            CustomerId = new Guid("07482d17-53f6-4a85-966c-29b4d7ce7de1"),
                            TransactionDate = new DateTime(2022, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("95aceb2d-0350-4ddb-963d-5ef254def8bf"),
                            Amount = 15192.52m,
                            CustomerId = new Guid("5d9ae272-7f04-4684-8b91-922b3c560b5c"),
                            TransactionDate = new DateTime(2023, 1, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("0e98d1d5-d27a-482f-a77f-9c9251da8e79"),
                            Amount = 11703.50m,
                            CustomerId = new Guid("8bc9242e-eb01-4e3b-ac34-3a4c51ee0dd5"),
                            TransactionDate = new DateTime(2022, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("cf853201-5ce1-431e-b61b-9151edad99de"),
                            Amount = 9842.85m,
                            CustomerId = new Guid("b6dac918-b7bf-4d42-bfde-811ace993ac2"),
                            TransactionDate = new DateTime(2022, 12, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("e54d80f2-599d-40df-bbfa-8e63c6a376ac"),
                            Amount = 3940.43m,
                            CustomerId = new Guid("d64d6165-fb24-4114-9b74-f11388ec882d"),
                            TransactionDate = new DateTime(2022, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("dfe83415-4523-475d-b4be-6bd9387761b8"),
                            Amount = 13910.67m,
                            CustomerId = new Guid("e97606f4-20f8-41b4-8021-dd62ee3e7af4"),
                            TransactionDate = new DateTime(2022, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("2be0ecd1-e997-4427-b6dd-11a7bc85c6bd"),
                            Amount = 1183.59m,
                            CustomerId = new Guid("85f2a1c8-8ba7-4a49-9a72-6bcfe6249e80"),
                            TransactionDate = new DateTime(2022, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("30b289a9-3924-4a23-abe2-00374a1201fa"),
                            Amount = 12396.27m,
                            CustomerId = new Guid("b52e01f1-851b-4569-953b-c20046b0c861"),
                            TransactionDate = new DateTime(2022, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("b987797f-713e-470b-ad27-c85656920094"),
                            Amount = 18095.37m,
                            CustomerId = new Guid("85f2a1c8-8ba7-4a49-9a72-6bcfe6249e80"),
                            TransactionDate = new DateTime(2022, 7, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("a1ca9af0-dd19-4a07-8fe8-02f5470c8a2d"),
                            Amount = 7388.27m,
                            CustomerId = new Guid("f3d7b703-d229-4c44-9e42-5ddb053b06f9"),
                            TransactionDate = new DateTime(2022, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("8da66764-7e7a-44ff-8c91-b4f2eaeb367e"),
                            Amount = 5204.34m,
                            CustomerId = new Guid("5f3417fa-717d-4f59-8a82-82f111065d46"),
                            TransactionDate = new DateTime(2022, 9, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("07297cce-6782-48b7-a7b2-bad710bdb97f"),
                            Amount = 14562.70m,
                            CustomerId = new Guid("ab3d0aaf-b23c-431b-96aa-40487cd61a1c"),
                            TransactionDate = new DateTime(2023, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("856872cc-7e93-41c8-a0ef-3d48db44faa6"),
                            Amount = 12432.71m,
                            CustomerId = new Guid("85f2a1c8-8ba7-4a49-9a72-6bcfe6249e80"),
                            TransactionDate = new DateTime(2023, 1, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Transaction_Id = new Guid("98430a69-c751-4235-bd17-2615ad1dc858"),
                            Amount = 9929.75m,
                            CustomerId = new Guid("8aba16ba-d548-4fff-8484-736013dcb769"),
                            TransactionDate = new DateTime(2022, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("CustomersAPI.Models.Transactions", b =>
                {
                    b.HasOne("CustomersAPI.Models.Customer", "Customer")
                        .WithMany("Transactions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Customer_ID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("CustomersAPI.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("CustomersAPI.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CustomersAPI.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("CustomersAPI.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CustomersAPI.Models.Customer", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
