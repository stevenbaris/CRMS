// <auto-generated />
using System;
using CRMS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CRMS.Migrations
{
    [DbContext(typeof(CRMSDbContext))]
    partial class CRMSDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CRMS.Models.AppointmentPurpose", b =>
                {
                    b.Property<Guid>("Purpose_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PurposeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Purpose_Id");

                    b.ToTable("APPOINTMENT_PURPOSES", (string)null);

                    b.HasData(
                        new
                        {
                            Purpose_Id = new Guid("b723e6c9-17a9-4fd5-9a0d-82dbbe2b48de"),
                            PurposeName = "Fact-Find"
                        },
                        new
                        {
                            Purpose_Id = new Guid("14b225d2-a67b-4ce7-a874-d7e4d43b7bc0"),
                            PurposeName = "Presentation"
                        },
                        new
                        {
                            Purpose_Id = new Guid("39e0e557-04cb-47a7-998b-32fae947dacc"),
                            PurposeName = "Proposal"
                        },
                        new
                        {
                            Purpose_Id = new Guid("cefb49da-c282-4627-906e-ee0d56ce81a0"),
                            PurposeName = "Sales Closing"
                        },
                        new
                        {
                            Purpose_Id = new Guid("fe21a2e1-0d21-408b-9cc2-272f3ee542c8"),
                            PurposeName = "Others"
                        });
                });

            modelBuilder.Entity("CRMS.Models.CommunicationMethod", b =>
                {
                    b.Property<Guid>("CommunicationMethod_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CommunicationMethodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CommunicationMethod_Id");

                    b.ToTable("ENGAGEMENT_COMMUNICATION METHODS", (string)null);

                    b.HasData(
                        new
                        {
                            CommunicationMethod_Id = new Guid("4bdb241e-644c-4b83-88ef-8babb9dac2b6"),
                            CommunicationMethodName = "Facebook"
                        },
                        new
                        {
                            CommunicationMethod_Id = new Guid("2217910d-7f3a-4f3f-ab09-88122e46b65f"),
                            CommunicationMethodName = "Instagram"
                        },
                        new
                        {
                            CommunicationMethod_Id = new Guid("646c730f-d5b1-4046-82da-fd403b78f68c"),
                            CommunicationMethodName = "WhatsApp"
                        },
                        new
                        {
                            CommunicationMethod_Id = new Guid("889b0b4e-ad4d-465d-8406-ccd35651c3c0"),
                            CommunicationMethodName = "Line"
                        },
                        new
                        {
                            CommunicationMethod_Id = new Guid("d0d011fe-53e0-442b-ae07-435b45495200"),
                            CommunicationMethodName = "Phone Call"
                        },
                        new
                        {
                            CommunicationMethod_Id = new Guid("37169b6b-3501-4ae4-b4a9-5851e441dbd2"),
                            CommunicationMethodName = "Test Message"
                        },
                        new
                        {
                            CommunicationMethod_Id = new Guid("ba768f7c-66b4-49bc-ad38-263e242fa469"),
                            CommunicationMethodName = "Email"
                        },
                        new
                        {
                            CommunicationMethod_Id = new Guid("48651ee6-af94-4a26-a1db-416cc3c39594"),
                            CommunicationMethodName = "Others"
                        });
                });

            modelBuilder.Entity("CRMS.Models.Effectivity", b =>
                {
                    b.Property<Guid>("Effectivity_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Effectivity_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Effectivity_Id");

                    b.ToTable("ENGAGEMENT_EFFECTIVITY", (string)null);

                    b.HasData(
                        new
                        {
                            Effectivity_Id = new Guid("824be642-ca17-4bbd-a7eb-6fdb7aec0cf4"),
                            Effectivity_Name = "Not Read"
                        },
                        new
                        {
                            Effectivity_Id = new Guid("14f8c3ce-0dae-4793-a428-0e7665e5585e"),
                            Effectivity_Name = "Read but no response"
                        },
                        new
                        {
                            Effectivity_Id = new Guid("194cc59a-d282-4c45-8dcf-8ed057d75c0e"),
                            Effectivity_Name = "Simple Response"
                        },
                        new
                        {
                            Effectivity_Id = new Guid("76d947a0-c597-4ef2-83f0-7f4036bd3471"),
                            Effectivity_Name = "Good Engagement"
                        });
                });

            modelBuilder.Entity("CRMS.Models.EngagementType", b =>
                {
                    b.Property<Guid>("EType_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EngagementName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EType_Id");

                    b.ToTable("ENGAGEMENT_ENGAGEMENT-TYPES", (string)null);

                    b.HasData(
                        new
                        {
                            EType_Id = new Guid("a3a45328-c7b8-4913-af67-5429ae1dc300"),
                            EngagementName = "Congratulations"
                        },
                        new
                        {
                            EType_Id = new Guid("21d87b01-7ac2-42cf-8399-bf752fb635fb"),
                            EngagementName = "Birthday"
                        },
                        new
                        {
                            EType_Id = new Guid("5b2768ef-a1b1-444c-b0ac-155d433ff362"),
                            EngagementName = "Anniversary"
                        },
                        new
                        {
                            EType_Id = new Guid("1c6c8f48-5583-4435-821e-857e0c5a6a3b"),
                            EngagementName = "Holiday"
                        },
                        new
                        {
                            EType_Id = new Guid("b58d27f3-4247-4c7b-ba58-0e87d7c52cdc"),
                            EngagementName = "Discount"
                        },
                        new
                        {
                            EType_Id = new Guid("41c9261f-5751-49ef-a7f1-24bc4b1057c4"),
                            EngagementName = "Company News"
                        },
                        new
                        {
                            EType_Id = new Guid("8905c48d-c071-43b0-a859-2daed63da8bc"),
                            EngagementName = "New Product"
                        },
                        new
                        {
                            EType_Id = new Guid("dabbed93-cce7-4c2c-aab1-0e40ac34f6dd"),
                            EngagementName = "Others"
                        });
                });

            modelBuilder.Entity("CRMS.Models.LeadStatus", b =>
                {
                    b.Property<Guid>("LeadStatus_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LeadStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LeadStatus_Id");

                    b.ToTable("LEADS_STATUSES", (string)null);

                    b.HasData(
                        new
                        {
                            LeadStatus_Id = new Guid("99c01814-4d9a-4a57-8c0e-96e36e865c88"),
                            LeadStatusName = "Contacted"
                        },
                        new
                        {
                            LeadStatus_Id = new Guid("2643073b-3b97-46c5-8218-1db223193676"),
                            LeadStatusName = "Met"
                        },
                        new
                        {
                            LeadStatus_Id = new Guid("802f018e-6c60-4d4b-b045-ee561a2c38a6"),
                            LeadStatusName = "Proposal Generated"
                        },
                        new
                        {
                            LeadStatus_Id = new Guid("2348a0ac-7197-481d-96c4-64b28f3ffd9b"),
                            LeadStatusName = "Application Submitted"
                        },
                        new
                        {
                            LeadStatus_Id = new Guid("ed6dc4a7-c020-441e-8a89-57c208e14a65"),
                            LeadStatusName = "Policy Issued"
                        },
                        new
                        {
                            LeadStatus_Id = new Guid("8d4be98a-1d59-4866-9528-3bbbd94d6257"),
                            LeadStatusName = "Lead is Dead"
                        });
                });

            modelBuilder.Entity("CRMS.Models.Source", b =>
                {
                    b.Property<Guid>("Source_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SourceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Source_Id");

                    b.ToTable("LEADS_SOURCES", (string)null);

                    b.HasData(
                        new
                        {
                            Source_Id = new Guid("20921d0a-a717-4a85-b4a5-b26c7f84f9c7"),
                            SourceName = "Referral"
                        },
                        new
                        {
                            Source_Id = new Guid("f992ea21-08f3-4c2f-bb98-91946bc15da2"),
                            SourceName = "Friend"
                        },
                        new
                        {
                            Source_Id = new Guid("953c53b9-325b-4ac8-9c82-325226b030c1"),
                            SourceName = "Compony-Generated"
                        },
                        new
                        {
                            Source_Id = new Guid("4ec7dec0-24f1-4d29-827f-0e03e8d405de"),
                            SourceName = "Social Media"
                        },
                        new
                        {
                            Source_Id = new Guid("a6b740f4-faab-4f36-a6e2-72ebe572a9e5"),
                            SourceName = "Webinar"
                        },
                        new
                        {
                            Source_Id = new Guid("cd7a22ce-0632-4b13-a3e0-eb502de8faa3"),
                            SourceName = "Others"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
