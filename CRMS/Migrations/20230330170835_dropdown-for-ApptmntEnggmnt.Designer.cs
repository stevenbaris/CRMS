// <auto-generated />
using System;
using CRMS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CRMS.Migrations
{
    [DbContext(typeof(CRMSDbContext))]
    [Migration("20230330170835_dropdown-for-ApptmntEnggmnt")]
    partial class dropdownforApptmntEnggmnt
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CRMS.Models.AppointmentPurpose", b =>
                {
                    b.Property<Guid>("Purpose_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PurposeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Purpose_Id");

                    b.ToTable("APPOINTMENT_PURPOSES", (string)null);

                    b.HasData(
                        new
                        {
                            Purpose_Id = new Guid("a17a9e89-703c-456c-8cf7-307020542c83"),
                            PurposeName = "Fact-Find"
                        },
                        new
                        {
                            Purpose_Id = new Guid("85211b5c-0733-456c-abd3-101aa251dc53"),
                            PurposeName = "Presentation"
                        },
                        new
                        {
                            Purpose_Id = new Guid("98e288e3-654c-4a3a-8b8b-a775f2eb3829"),
                            PurposeName = "Proposal"
                        },
                        new
                        {
                            Purpose_Id = new Guid("c1a07a9c-ee9b-47ee-ab37-ca406a78707c"),
                            PurposeName = "Sales Closing"
                        },
                        new
                        {
                            Purpose_Id = new Guid("07e2c562-6b90-4559-85f1-12e6fdc0f4fc"),
                            PurposeName = "Others"
                        });
                });

            modelBuilder.Entity("CRMS.Models.CommunicationMethod", b =>
                {
                    b.Property<Guid>("CommunicationMethod_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CommunicationMethodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CommunicationMethod_Id");

                    b.ToTable("ENGAGEMENT_COMMUNICATION METHODS", (string)null);

                    b.HasData(
                        new
                        {
                            CommunicationMethod_Id = new Guid("dd0cc4e5-6ce5-43a7-bbcc-34b5159a40be"),
                            CommunicationMethodName = "Facebook"
                        },
                        new
                        {
                            CommunicationMethod_Id = new Guid("48fe6fe4-a4b6-49c4-9f1d-4471f3dbcad6"),
                            CommunicationMethodName = "Instagram"
                        },
                        new
                        {
                            CommunicationMethod_Id = new Guid("ae5fd60c-dd12-4f0c-bd7c-bda592cfcb91"),
                            CommunicationMethodName = "WhatsApp"
                        },
                        new
                        {
                            CommunicationMethod_Id = new Guid("fdfdf9db-5356-4522-8924-c4ea838d7901"),
                            CommunicationMethodName = "Line"
                        },
                        new
                        {
                            CommunicationMethod_Id = new Guid("6e0f22d6-3397-4a32-9f36-ddedad74a5da"),
                            CommunicationMethodName = "Phone Call"
                        },
                        new
                        {
                            CommunicationMethod_Id = new Guid("ca6e9e86-fa5c-407f-a6e1-a8a472c780c3"),
                            CommunicationMethodName = "Test Message"
                        },
                        new
                        {
                            CommunicationMethod_Id = new Guid("bd7fe088-0bcd-4d24-8ba7-7ae59f730057"),
                            CommunicationMethodName = "Email"
                        },
                        new
                        {
                            CommunicationMethod_Id = new Guid("7bef1c63-5b05-47e6-a7a6-2704333d19bb"),
                            CommunicationMethodName = "Others"
                        });
                });

            modelBuilder.Entity("CRMS.Models.Effectivity", b =>
                {
                    b.Property<Guid>("Effectivity_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Effectivity_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Effectivity_Id");

                    b.ToTable("ENGAGEMENT_EFFECTIVITY", (string)null);

                    b.HasData(
                        new
                        {
                            Effectivity_Id = new Guid("ef9483d2-ccce-4124-8de1-c10392285805"),
                            Effectivity_Name = "Not Read"
                        },
                        new
                        {
                            Effectivity_Id = new Guid("57b13b9b-fd42-4f9c-a73b-3dfcfd32dcdb"),
                            Effectivity_Name = "Read but no response"
                        },
                        new
                        {
                            Effectivity_Id = new Guid("84ef3def-854a-4f45-81de-0a99bcba827e"),
                            Effectivity_Name = "Simple Response"
                        },
                        new
                        {
                            Effectivity_Id = new Guid("c0128c24-1163-44cb-9d23-93d28ff5b246"),
                            Effectivity_Name = "Good Engagement"
                        });
                });

            modelBuilder.Entity("CRMS.Models.EngagementType", b =>
                {
                    b.Property<Guid>("EType_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EngagementName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EType_Id");

                    b.ToTable("ENGAGEMENT_ENGAGEMENT-TYPES", (string)null);

                    b.HasData(
                        new
                        {
                            EType_Id = new Guid("9442c012-5fd9-45c9-9201-dffb189c6a52"),
                            EngagementName = "Congratulations"
                        },
                        new
                        {
                            EType_Id = new Guid("ec94bb51-2294-4428-9212-d88071566f23"),
                            EngagementName = "Birthday"
                        },
                        new
                        {
                            EType_Id = new Guid("84265c26-065a-4e92-a524-9519ee663d21"),
                            EngagementName = "Anniversary"
                        },
                        new
                        {
                            EType_Id = new Guid("dac3000c-d1b4-4e2b-a74c-1c094f0efb24"),
                            EngagementName = "Holiday"
                        },
                        new
                        {
                            EType_Id = new Guid("d078468f-bbc7-4794-b7ff-9c36665dfcdf"),
                            EngagementName = "Discount"
                        },
                        new
                        {
                            EType_Id = new Guid("db1bc8e5-9d59-4079-b425-a302c59ceb73"),
                            EngagementName = "Company News"
                        },
                        new
                        {
                            EType_Id = new Guid("6ef33022-617f-4990-bde9-2b78b445b44e"),
                            EngagementName = "New Product"
                        },
                        new
                        {
                            EType_Id = new Guid("614779ba-0c52-4cc3-a617-12471e4c0f6a"),
                            EngagementName = "Others"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
