// <auto-generated />
using System;
using CRMS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CRMS.Migrations
{
    [DbContext(typeof(CRMSDbContext))]
    [Migration("20230331053913_adding-identity-tables")]
    partial class addingidentitytables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CRMS.Models.AppointmentPurpose", b =>
                {
                    b.Property<Guid>("Purpose_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PurposeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Purpose_Id");

                    b.ToTable("APPOINTMENT_PURPOSES", (string)null);

                    b.HasData(
                        new
                        {
                            Purpose_Id = new Guid("61456991-8576-4f1a-a753-139940610a5e"),
                            PurposeName = "Fact-Find"
                        },
                        new
                        {
                            Purpose_Id = new Guid("2107d263-f6a6-409b-b9d9-a034da509e97"),
                            PurposeName = "Presentation"
                        },
                        new
                        {
                            Purpose_Id = new Guid("4b450562-ccd8-44ef-b28c-77ce2e1c9a7c"),
                            PurposeName = "Proposal"
                        },
                        new
                        {
                            Purpose_Id = new Guid("ac558199-bf88-4cd2-99ed-839231cc8689"),
                            PurposeName = "Sales Closing"
                        },
                        new
                        {
                            Purpose_Id = new Guid("a6051811-1ce8-423e-9b69-b37c742295ec"),
                            PurposeName = "Others"
                        });
                });

            modelBuilder.Entity("CRMS.Models.CommunicationMethod", b =>
                {
                    b.Property<Guid>("CommunicationMethod_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CommunicationMethodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CommunicationMethod_Id");

                    b.ToTable("ENGAGEMENT_COMMUNICATION METHODS", (string)null);

                    b.HasData(
                        new
                        {
                            CommunicationMethod_Id = new Guid("7ff23b6d-1ebd-4bc9-996c-b6df7ba9852b"),
                            CommunicationMethodName = "Facebook"
                        },
                        new
                        {
                            CommunicationMethod_Id = new Guid("4cf975d3-2698-453d-818b-3017752da0a0"),
                            CommunicationMethodName = "Instagram"
                        },
                        new
                        {
                            CommunicationMethod_Id = new Guid("ad0aaebf-9815-4c8c-be7d-fbf15d79f27a"),
                            CommunicationMethodName = "WhatsApp"
                        },
                        new
                        {
                            CommunicationMethod_Id = new Guid("dffce4c9-3b0c-4b13-b05a-b862a35c7142"),
                            CommunicationMethodName = "Line"
                        },
                        new
                        {
                            CommunicationMethod_Id = new Guid("b8c4c8d5-4cc2-4bff-86c1-b4f3c9c52f1b"),
                            CommunicationMethodName = "Phone Call"
                        },
                        new
                        {
                            CommunicationMethod_Id = new Guid("c32854ad-eef8-4841-93ab-5e842ad2fb19"),
                            CommunicationMethodName = "Test Message"
                        },
                        new
                        {
                            CommunicationMethod_Id = new Guid("97bb2f0e-5a40-4443-8460-c6090d9fd461"),
                            CommunicationMethodName = "Email"
                        },
                        new
                        {
                            CommunicationMethod_Id = new Guid("09e0eeb2-8aba-4b2c-8f55-4889f0f1973b"),
                            CommunicationMethodName = "Others"
                        });
                });

            modelBuilder.Entity("CRMS.Models.Effectivity", b =>
                {
                    b.Property<Guid>("Effectivity_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Effectivity_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Effectivity_Id");

                    b.ToTable("ENGAGEMENT_EFFECTIVITY", (string)null);

                    b.HasData(
                        new
                        {
                            Effectivity_Id = new Guid("d4914ea9-9ed2-4e0c-957e-a7d5380a7e38"),
                            Effectivity_Name = "Not Read"
                        },
                        new
                        {
                            Effectivity_Id = new Guid("9a6e751c-5f50-4747-b80b-60d8cfb98144"),
                            Effectivity_Name = "Read but no response"
                        },
                        new
                        {
                            Effectivity_Id = new Guid("fe8afbb6-20ea-484a-919f-9878a48800a3"),
                            Effectivity_Name = "Simple Response"
                        },
                        new
                        {
                            Effectivity_Id = new Guid("df49f373-e988-4ce1-b304-abcc8bcc5ed7"),
                            Effectivity_Name = "Good Engagement"
                        });
                });

            modelBuilder.Entity("CRMS.Models.EngagementType", b =>
                {
                    b.Property<Guid>("EType_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EngagementName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EType_Id");

                    b.ToTable("ENGAGEMENT_ENGAGEMENT-TYPES", (string)null);

                    b.HasData(
                        new
                        {
                            EType_Id = new Guid("4ae1f267-2b69-42f9-8ed4-474bf85e7a0a"),
                            EngagementName = "Congratulations"
                        },
                        new
                        {
                            EType_Id = new Guid("ca2f11d3-bdf6-4b4f-afb6-dff9136e8119"),
                            EngagementName = "Birthday"
                        },
                        new
                        {
                            EType_Id = new Guid("5166f386-c8e6-4c93-8559-d56ef453333c"),
                            EngagementName = "Anniversary"
                        },
                        new
                        {
                            EType_Id = new Guid("ecabb29a-28d9-4414-859b-c1f9cd3a0f1d"),
                            EngagementName = "Holiday"
                        },
                        new
                        {
                            EType_Id = new Guid("b74af64b-e725-498f-98a0-bec3c50360ef"),
                            EngagementName = "Discount"
                        },
                        new
                        {
                            EType_Id = new Guid("18fd6b9e-8331-4e9a-a400-559754b662f7"),
                            EngagementName = "Company News"
                        },
                        new
                        {
                            EType_Id = new Guid("e78da97e-8db3-488a-817d-e96681f60dc0"),
                            EngagementName = "New Product"
                        },
                        new
                        {
                            EType_Id = new Guid("1f1d1c14-50c0-402d-b445-a07531a05007"),
                            EngagementName = "Others"
                        });
                });

            modelBuilder.Entity("CRMS.Models.LeadStatus", b =>
                {
                    b.Property<Guid>("LeadStatus_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LeadStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LeadStatus_Id");

                    b.ToTable("LEADS_STATUSES", (string)null);

                    b.HasData(
                        new
                        {
                            LeadStatus_Id = new Guid("2cd79579-5b43-496e-8039-d8464dc2a6de"),
                            LeadStatusName = "Contacted"
                        },
                        new
                        {
                            LeadStatus_Id = new Guid("f515d52d-b404-45e6-ba5b-67b81ed17b9e"),
                            LeadStatusName = "Met"
                        },
                        new
                        {
                            LeadStatus_Id = new Guid("887658a8-d10e-427f-a676-da6882f0ae01"),
                            LeadStatusName = "Proposal Generated"
                        },
                        new
                        {
                            LeadStatus_Id = new Guid("05d4f04c-eba1-4b7f-ad97-c8196c665431"),
                            LeadStatusName = "Application Submitted"
                        },
                        new
                        {
                            LeadStatus_Id = new Guid("a3745347-03a2-4e5a-b899-7798fd2e9a69"),
                            LeadStatusName = "Policy Issued"
                        },
                        new
                        {
                            LeadStatus_Id = new Guid("53ca32fd-d16a-4852-9abf-ccfb0b8b4793"),
                            LeadStatusName = "Lead is Dead"
                        });
                });

            modelBuilder.Entity("CRMS.Models.Source", b =>
                {
                    b.Property<Guid>("Source_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SourceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Source_Id");

                    b.ToTable("LEADS_SOURCES", (string)null);

                    b.HasData(
                        new
                        {
                            Source_Id = new Guid("dc8ef401-a5c3-45ef-bc79-9a13d98e520b"),
                            SourceName = "Referral"
                        },
                        new
                        {
                            Source_Id = new Guid("9ab32434-ef92-45e1-a08e-fea904160b26"),
                            SourceName = "Friend"
                        },
                        new
                        {
                            Source_Id = new Guid("78ca56fd-c25c-49dc-b74c-3881e4309b7f"),
                            SourceName = "Compony-Generated"
                        },
                        new
                        {
                            Source_Id = new Guid("937f5772-6ce1-4231-ab98-b38de56f3b0b"),
                            SourceName = "Social Media"
                        },
                        new
                        {
                            Source_Id = new Guid("6911a4f7-64c7-4a4a-b966-9323f5b73ad2"),
                            SourceName = "Webinar"
                        },
                        new
                        {
                            Source_Id = new Guid("7b578a2b-1681-4018-aaf8-ddf78b6e5749"),
                            SourceName = "Others"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
