@model CRMS.Models.Customization.AppointmentPurpose

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Customization/z_CustomizationLayout.cshtml";
}

<div class="mt-3">
    <h2 style="font-weight: bold; font-family: Poppins; color:#002756">Edit Purpose</h2>
    <hr />
    <p style="color: gray">Customization > Purpose > Edit</p>
    <br />
    @*<p></a>int Count</p>*@
    <br />
</div>
<form class="row g-3 needs-validation" style=" border: 2px solid lightgray;
    border-radius: 20px; padding: 35px;" novalidate asp-action="Edit" method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="Purpose_Id" />
    <div class="col-md-12">
        <div class="form-floating">
            <input asp-for="PurposeName" class="form-control" placeholder=" " required>
            <label asp-for="PurposeName">Purpose</label>
            <span asp-validation-for="PurposeName" class="text-danger"></span>
            <div class="invalid-feedback">
                Purpose is required!
            </div>
        </div>
    </div>
    <div class="col-12">
        <br />
        <button type="submit" class="btn w3-highway-blue">Edit</button>
        <button onclick="history.go(-1)" class="btn btn-secondary">Cancel</button>
    </div>

</form>

<script>
    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function () {
        'use strict'

        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        var forms = document.querySelectorAll('.needs-validation')

        // Loop over them and prevent submission
        Array.prototype.slice.call(forms)
            .forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }

                    form.classList.add('was-validated')
                }, false)
            })
    })()

</script>
