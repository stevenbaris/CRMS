@model Appointments

@{
    ViewData["Title"] = "Edit Appointment";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<header style="padding: 30px;">
    <h1 style="font-weight:700">Edit Appointment</h1>
    <hr />
    <br />
    <form class="row g-3 needs-validation" novalidate asp-controller="Appointments" asp-action="Edit" method="post">
        <input type="hidden" asp-for="Appointment_Id" />
        <input type="hidden" asp-for="CreatedBy" />
        <input type="hidden" asp-for="CreatedDate" />

        <div class="col-md-5">
            <div class="form-floating">
                <input asp-for="Appointment_DateTime" class="form-control" min="@DateTime.Now.ToString("MM-dd-yyyy")" required>
                <label asp-for="Appointment_DateTime">Appointment Schedule</label>
                <span asp-validation-for="Appointment_DateTime" class="text-danger"></span>
                <div class="invalid-feedback">
                    Date and Time are required!
                </div>
            </div>
        </div>

        <div class="col-md-7">
            <div class="form-floating">
                <input asp-for="Description" class="form-control" placeholder=" " required>
                <label asp-for="Description">Description</label>
                <span asp-validation-for="Description" class="text-danger"></span>
                <div class="invalid-feedback">
                    Description is required!
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-floating">
                @Html.DropDownList("SchedStatus", Html.GetEnumSelectList<SchedStatus>(), "-- Select Status --",new { @class = "form-control", @required = "required"   })
                <label asp-for="SchedStatus">Status</label>
                <span asp-validation-for="SchedStatus" class="text-danger"></span>
                <div class="invalid-feedback">
                    Please choose a Status!
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-floating">
                @Html.DropDownListFor(model => model.PurposeId, (IEnumerable<SelectListItem>)ViewBag.PurposeId, "-- Select Purpose --", new { @class = "form-control", @required = "required"  })
                <label asp-for="PurposeId">Purpose</label>
                <span asp-validation-for="PurposeId" class="text-danger"></span>
                <div class="invalid-feedback">
                    Please choose a Purpose!
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-floating">
                @Html.DropDownListFor(model => model.ContactId, (IEnumerable<SelectListItem>)ViewBag.ContactId, "-- Select Contact --", new { @class = "form-control", @required = "required"  })
                <label asp-for="ContactId">Contact</label>
                <span asp-validation-for="ContactId" class="text-danger"></span>
                <div class="invalid-feedback">
                    Please choose a Contact!
                </div>
            </div>
        </div>

        <div class="col-12">
            <br />
            <button type="submit" class="btn w3-highway-blue">Edit</button>
            <a asp-action="Index" class="btn btn-secondary">Cancel</a>
        </div>

    </form>
</header>


<script>
    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function () {
        'use strict'

        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        var forms = document.querySelectorAll('.needs-validation')

        // Loop over them and prevent submission
        Array.prototype.slice.call(forms)
            .forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }

                    form.classList.add('was-validated')
                }, false)
            })
    })()

</script>